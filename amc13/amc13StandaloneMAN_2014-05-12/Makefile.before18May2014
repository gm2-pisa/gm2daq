#
# Makefile for building AMC13 code against the cactus/uhal library
# *****THIS MAKEFILE ONLY SUPPORTS AN RPM CACTUS INSTALLATION*****
# -----------------------------------------------------------------------
#
# This Makefile assumes you have a standard YUM/RPM cactus installation in: /opt/cactus
#
#   Your header files (.hh files) must go into a folder called: include/hcal/amc13
#   Your source ane executable files (.cc and .cxx files) must go into a folder called: src/common/


AMC13_ROOT = $(shell pwd)
CACTUS_ROOT = /opt/cactus

INCLUDES = $(wildcard include/.hh)

INCLUDE_PATH =  \
                -Iinclude  \
                -I${CACTUS_ROOT}/include \
		-I/diskless/SL60/x86_64/root/usr/include

LIBNAME = uhalamc13

LIBRARY = lib/lib${LIBNAME}.so

LIBRARY_SOURCES = $(wildcard src/common/*.cc)

LIBRARY_OBJECT_FILES = $(patsubst src/common/%.cc,obj/%.o,${LIBRARY_SOURCES})

EXECUTABLE_SOURCES = $(wildcard src/common/*.cxx)
EXECUTABLE_OBJECT_FILES = $(patsubst src/common/%.cxx,obj/%.o,${EXECUTABLE_SOURCES})
EXECUTABLES = $(patsubst src/common/%.cxx,bin/%,${EXECUTABLE_SOURCES})

LIBRARY_PATH =  \
                -L${CACTUS_ROOT}/lib \
                -L${AMC13_ROOT}/lib \
		-L/lib64 \
		-L/diskless/SL60/x86_64/root/usr/lib64 \
		-L/diskless/SL60/x86_64/root/lib64

LIBRARIES =     \
                -lpthread \
                -lreadline \
                -lboost_filesystem \
                -lboost_regex \
                -lboost_system \
                -lboost_thread \
                \
                -lcactus_extern_pugixml \
                -lcactus_uhal_log \
                -lcactus_uhal_grammars \
                -lcactus_uhal_uhal


CC_FLAGS = -O3 -Wall -fPIC -g ${INCLUDE_PATH}
LINK_LIBRARY_FLAGS = -shared -fPIC -Wall -O3 ${LIBRARY_PATH} ${LIBRARIES}
LINK_EXECUTABLE_FLAGS = -Wall -g -O3 ${LIBRARY_PATH} ${LIBRARIES} -l${LIBNAME} -lreadline -lncurses

.PHONY: all _all build _buildall clean _cleanall

default: build

clean: _cleanall
_cleanall:
	rm -rf bin
	rm -rf obj
	rm -rf lib
  
all: _all
build: _all
buildall: _all
_all: obj bin lib ${LIBRARY} ${EXECUTABLES}

bin:
	mkdir -p bin

obj:
	mkdir -p obj

lib:
	mkdir -p lib

${EXECUTABLES}: bin/%: obj/%.o ${EXECUTABLE_OBJECT_FILES}
	g++ ${LINK_EXECUTABLE_FLAGS}  $< -o $@

${EXECUTABLE_OBJECT_FILES}: obj/%.o : src/common/%.cxx
	g++ -c ${CC_FLAGS}  $< -o $@

${LIBRARY}: ${LIBRARY_OBJECT_FILES}
	g++ ${LINK_LIBRARY_FLAGS} ${LIBRARY_OBJECT_FILES} -o $@

${LIBRARY_OBJECT_FILES}: obj/%.o : src/common/%.cc 
	g++ -c ${CC_FLAGS} $< -o $@

